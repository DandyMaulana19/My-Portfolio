{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\ReactJS\\\\reactxtailwind\\\\src\\\\components\\\\Counterup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealTimeCountdown() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(getTimeLeft());\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimeLeft(getTimeLeft());\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  function getTimeLeft() {\n    const startDate = new Date('January 19, 2004');\n    const now = new Date();\n    const diff = now.getTime() - startDate.getTime();\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n    const seconds = Math.floor(diff % (1000 * 60) / 1000);\n    return {\n      days,\n      hours,\n      minutes,\n      seconds\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [timeLeft.days, \" : \", timeLeft.hours, \" : \", timeLeft.minutes, \" : \", timeLeft.seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(RealTimeCountdown, \"6fpp6brySeoJ3NzLkH6rdo6fr9o=\");\n_c = RealTimeCountdown;\nexport default RealTimeCountdown;\nvar _c;\n$RefreshReg$(_c, \"RealTimeCountdown\");","map":{"version":3,"names":["React","useState","useEffect","RealTimeCountdown","timeLeft","setTimeLeft","getTimeLeft","intervalId","setInterval","clearInterval","startDate","Date","now","diff","getTime","days","Math","floor","hours","minutes","seconds"],"sources":["D:/My Project/ReactJS/reactxtailwind/src/components/Counterup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction RealTimeCountdown() {\r\n  const [timeLeft, setTimeLeft] = useState(getTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setTimeLeft(getTimeLeft());\r\n    }, 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  function getTimeLeft() {\r\n    const startDate = new Date('January 19, 2004');\r\n    const now = new Date();\r\n    const diff = now.getTime() - startDate.getTime();\r\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((diff % (1000 * 60)) / 1000);\r\n    return { days, hours, minutes, seconds };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span>{timeLeft.days} : {timeLeft.hours} : {timeLeft.minutes} : {timeLeft.seconds}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RealTimeCountdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,iBAAiB,GAAG;EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAACK,WAAW,EAAE,CAAC;EAEvDJ,SAAS,CAAC,MAAM;IACd,MAAMK,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,WAAW,CAACC,WAAW,EAAE,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASD,WAAW,GAAG;IACrB,MAAMI,SAAS,GAAG,IAAIC,IAAI,CAAC,kBAAkB,CAAC;IAC9C,MAAMC,GAAG,GAAG,IAAID,IAAI,EAAE;IACtB,MAAME,IAAI,GAAGD,GAAG,CAACE,OAAO,EAAE,GAAGJ,SAAS,CAACI,OAAO,EAAE;IAChD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACrD,MAAMK,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3E,MAAMM,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;IACnE,MAAMO,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;IACvD,OAAO;MAAEE,IAAI;MAAEG,KAAK;MAAEC,OAAO;MAAEC;IAAQ,CAAC;EAC1C;EAEA,oBACE;IAAA,uBACE;MAAA,WAAOhB,QAAQ,CAACW,IAAI,SAAKX,QAAQ,CAACc,KAAK,SAAKd,QAAQ,CAACe,OAAO,SAAKf,QAAQ,CAACgB,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAAQ;IAAA;IAAA;IAAA;EAAA,QACrF;AAEV;AAAC,GA1BQjB,iBAAiB;AAAA,KAAjBA,iBAAiB;AA4B1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}